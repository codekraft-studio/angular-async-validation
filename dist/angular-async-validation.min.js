/**
* Package: angular-async-validation - v0.0.4 
* Description: A multi purpose directive for input async validation 
* Last build: 2017-05-04 
* @author codekraft-studio 
* @license ISC 
*/

angular.module("angular-async-validation",[]),angular.module("angular-async-validation").directive("asyncValidation",["$log","$q","$http",function($log,$q,$http){function _link(scope,elem,attrs,ngModel){var validationFunction,validatorName=scope.validatorName?scope.validatorName:"asyncValidator";if(!scope.asyncValidation&&!angular.isString(scope.asyncValidation)&&!angular.isFunction(scope.asyncValidation))return void $log.warn("angular-async-validation: missing or empty argument in async-validation attribute on:",elem);ngModel.$options&&ngModel.$options.getOption("debounce")||(ngModel.$options=ngModel.$options.createChild({"*":"$inherit",updateOnDefault:!0,debounce:500})),angular.isString(scope.asyncValidation)&&(validationFunction=function(modelValue,viewValue){var value=modelValue||viewValue;if(ngModel.$isEmpty(value))return $q.resolve();var deferred=$q.defer(),url=scope.asyncValidation.replace(":value",value);return $http.get(url,{notifyError:!1}).then(function(response){response.data?deferred.reject():deferred.resolve()},function(){deferred.resolve()}),deferred.promise}),angular.isFunction(scope.asyncValidation)&&(validationFunction=scope.asyncValidation),ngModel.$asyncValidators[validatorName]=validationFunction}return{restrict:"A",require:"ngModel",scope:{asyncValidation:"=",validatorName:"@?"},link:_link}}]);